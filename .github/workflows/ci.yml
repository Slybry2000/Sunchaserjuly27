name: CI

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-lint:
    name: Backend • Lint & Typecheck
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./Backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Backend/requirements*.txt') }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          if [ -f pyproject.toml ] || [ -f setup.py ]; then pip install -e .; fi
      - name: Ruff
        run: ruff check .
      - name: Mypy
        run: mypy --config-file mypy.ini

  backend-test:
    name: Backend • Tests
    runs-on: ubuntu-24.04
    needs: backend-lint
    defaults:
      run:
        working-directory: ./Backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Backend/requirements*.txt') }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          if [ -f pyproject.toml ] || [ -f setup.py ]; then pip install -e .; fi
      - name: Run tests
        run: pytest -q
      - name: Coverage (XML)
        run: pytest --cov=Backend --cov-report=xml
      # - name: Upload coverage to Codecov
      #   run: codecov -f coverage.xml
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      # - name: Supply-chain audit
      #   run: pip-audit

  frontend-analyze:
    name: Frontend • Analyze
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./Frontend
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Cache pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('Frontend/pubspec.lock') }}
      - name: Get deps
        run: flutter pub get
      - name: Analyze
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

  frontend-test:
    name: Frontend • Tests
    runs-on: ubuntu-24.04
    needs: frontend-analyze
    defaults:
      run:
        working-directory: ./Frontend
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Cache pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('Frontend/pubspec.lock') }}
      - name: Get deps
        run: flutter pub get
      - name: Run widget/unit tests
        run: flutter test --reporter expanded
